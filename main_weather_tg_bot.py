# pip install requests
# pip install aiogram
import requests
import datetime
from config import tg_bot_token, open_weather_token
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.dispatcher.filters import Text
from aiogram.types import ParseMode, InputMediaPhoto, InputMediaVideo, ChatActions
from aiogram.types.message import ContentType

bot = Bot(token=tg_bot_token) # –¢–æ–∫–µ–Ω –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
dp = Dispatcher(bot) # –ü—Ä–æ—Å—Ç–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ)
cany="BAACAgIAAxkBAAIB3mOPcpGSMA4ZzPZugnpnpY5OazOpAAJCIwACLwmBSFt09M35Pd3iKwQ"
tim='AgACAgIAAxkBAAIDEmOQy6xWoaKZb7KqxaoGeEmJ6fy_AAJdwDEbsnKISI3jydK__ESwAQADAgADcwADKwQ'
karmagedon='BAACAgIAAxkBAAIDQmOQzjHx1kuc4MIgxRqg86TB-nDXAAJtJQACLwmJSA2E_PwYhsAAASsE'

@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.answer("–ö–û–ú–ê–ù–î–´")
    await message.answer("/start - –ù–∞—á–∞–ª–æ")
    await message.answer("/cany - –ø–∞—Å—Ö–∞–ª–∫–∞ —Å —Å–∞–Ω—å–∫–æ–º")
    await message.answer("/potato - –ø–∞—Å—Ö–∞–ª–∫–∞ —Å —Ç–∏–º–æ—à–∫–æ–π")
    await message.answer("/karmagedon - –ø–∞—Å—Ö–∞–ª–∫–∞ —Å –∫–∏–∑–∞—Ä—É")

@dp.message_handler(commands=['cany'])
async def process_video2_command(message: types.Message):
    caption = '–°–∞–Ω—è'
    await bot.send_video(message.from_user.id, cany,
                         reply_to_message_id=message.message_id)

@dp.message_handler(commands=['potato'])
async def process_photo_command(message: types.Message):
    caption = '–ü–∞—Ä—É –º–µ—à–∫–æ–≤ –∫–∞—Ä—Ç–æ—à–∫–∏'
    await bot.send_photo(message.from_user.id, tim,
                         reply_to_message_id=message.message_id)

@dp.message_handler(commands=['karmagedon'])
async def process_video_command1(message: types.Message):
    caption = '–ö–∞—Ä–º–∞–≥–µ–¥–æ–Ω —É —à–∫–æ–ª—å–Ω–∏–∫–∞'
    await bot.send_video(message.from_user.id, karmagedon,
                         reply_to_message_id=message.message_id)

@dp.message_handler(commands="start")
async def cmd_start(message: types.Message):
    kb = [
        [types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞ \U00002600")],
        [types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è", request_contact=True)],
        [types.KeyboardButton(text="–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ üë®‚Äçüíª")],
        [types.KeyboardButton(text="–°–µ–∫—Ä–µ—Ç ‚ùì")] # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–Ω–æ–ø–æ–∫
    ]
    
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=kb)
    await message.answer("–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —Ç–µ–±—è! –≠—Ç–æ—Ç –±–æ—Ç —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Ç–∞–∫, —á—Ç–æ –Ω–µ –±–æ–º–±–∏—Ç–µ –µ—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç) \U0001F600", reply_markup=keyboard) # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ

inline_btn_1 = types.InlineKeyboardButton('–í–µ—Å—å –∫–æ–¥', callback_data='buttonGit', url='https://github.com/platon255/AbdulaBotPython') # –ò–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞
inline_kb1 = types.InlineKeyboardMarkup().add(inline_btn_1)

# –ü–∞—Å—Ö–∞–ª–∫–∏
@dp.message_handler(text='–°–µ–∫—Ä–µ—Ç ‚ùì')
async def process_command_1(message: types.Message):
    await message.answer(text="–£–£–£ –°–µ–∫—Ä–µ—Ç–∏–∫–∏ ‚ùì‚ùì‚ùì")
    kb = [
    [types.KeyboardButton(text="–£—Å–∞—á üë®")],
    [types.KeyboardButton(text="–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å üçü")],
    [types.KeyboardButton(text="–ö–∞—Ä–º–∞–≥–µ–¥–æ–Ω üå™")],
    [types.KeyboardButton(text="–ú–µ–Ω—é üë•")] # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–Ω–æ–ø–æ–∫
    ]
    
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=kb)
    await message.answer("–í—ã–±–∏—Ä–∞–π —Å–µ–∫—Ä–µ—Ç–∏–∫ ...", reply_markup=keyboard) 

@dp.message_handler(text='–£—Å–∞—á üë®')
async def process_video2_1_command(message: types.Message):
    await message.answer(text="–ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—É /help –∏ —É–∑–Ω–∞–µ—à—å –≤—Å–µ —Å–µ–∫—Ä–µ—Ç—ã")

@dp.message_handler(text='–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å üçü')
async def process_photo_1_command(message: types.Message):
    await message.answer(text="–ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—É /help –∏ —É–∑–Ω–∞–µ—à—å –≤—Å–µ —Å–µ–∫—Ä–µ—Ç—ã")

@dp.message_handler(text='–ö–∞—Ä–º–∞–≥–µ–¥–æ–Ω üå™')
async def process_video1_2_command(message: types.Message):
    await message.answer(text="–ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—É /help –∏ —É–∑–Ω–∞–µ—à—å –≤—Å–µ —Å–µ–∫—Ä–µ—Ç—ã")

@dp.message_handler(text="–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ üë®‚Äçüíª")
async def process_command_2(message: types.Message):
    await message.answer(text="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–∫–µ—Ç –Ω–∞ –≥–∏—Ç —Ö–∞–±–µ \U0001F600", reply_markup=inline_kb1) # –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∫–∏–¥—ã–≤–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫—É
    kb = [
    [types.KeyboardButton(text="–ú–µ–Ω—é üë•")]  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–Ω–æ–ø–æ–∫
    ]
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=kb)
    await message.answer("–í–µ—Ä—Å–∏—è –ø–æ–∫–∞ –Ω–µ –≤—ã—à–ª–∞ –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –¥–æ—Å—Ç—É–ø ‚ùå", reply_markup=keyboard) 

@dp.message_handler(text='–ú–µ–Ω—é üë•')
async def cmd_start1(message: types.Message):
    kb = [
        [types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞ \U00002600")],
        [types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è", request_contact=True)],
        [types.KeyboardButton(text="–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ üë®‚Äçüíª")],
        [types.KeyboardButton(text="–°–µ–∫—Ä–µ—Ç ‚ùì")] # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–Ω–æ–ø–æ–∫
    ]
    
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=kb)
    await message.answer(text='–ú–µ–Ω—é—à–µ—á–∫–∞', reply_markup=keyboard)

@dp.message_handler()
async def get_weather(message: types.Message):
    if message.text == '–ü–æ–≥–æ–¥–∞ \U00002600':
        await message.reply("–ü—Ä–∏–≤–µ—Ç! –¢—ã –ø—Ä–æ—Å—Ç–æ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è")
    else:
        code_to_smile = {
            "Clear": "–Ø—Å–Ω–æ \U00002600",
            "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
            "Rain": "–î–æ–∂–¥—å \U00002614",
            "Drizzle": "–î–æ–∂–¥—å \U00002614",
            "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
            "Snow": "–°–Ω–µ–≥ \U0001F328",
            "Mist": "–¢—É–º–∞–Ω \U0001F32B"
        }

        try:
            r = requests.get(
                f"http://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric"
            )
            data = r.json()

            city = data["name"]
            cur_weather = data["main"]["temp"]

            weather_description = data["weather"][0]["main"]
            if weather_description in code_to_smile:
                wd = code_to_smile[weather_description]
            else:
                wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞!"

            humidity = data["main"]["humidity"]
            pressure = data["main"]["pressure"]
            wind = data["wind"]["speed"]
            sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
            sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
            length_of_the_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(
                data["sys"]["sunrise"])

            await message.reply(f"‚ö†Ô∏è{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}‚ö†Ô∏è\n"
                f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}C¬∞ {wd}\n"
                f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_the_day}\n"
                f"–í–æ—Ç –∏ –≤—Å—è –ø–æ–≥–æ–¥–∞ ‚úÖ"
                )

        except:
            await message.reply("\U00002620 –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ \U00002620")

if __name__ == '__main__':
    executor.start_polling(dp)